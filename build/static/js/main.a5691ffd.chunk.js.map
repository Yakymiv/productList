{"version":3,"sources":["components/main/cardElement.jsx","config/firebase-conf.js","firebase.js","components/main/newProductModal.jsx","components/main/productListPage.jsx","components/main/productChangeModal.jsx","components/main/comment.jsx","components/main/productComments.jsx","components/main/productPage.jsx","components/main/mainPage.jsx","App.js","index.js"],"names":["CardElement","id","name","img","desc","count","useState","show","setShow","handleClose","className","Modal","onHide","Header","Title","Body","Footer","Button","variant","onClick","data-id","to","src","alt","firebaseObject","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","db","firestore","NewProductModal","setCardList","productName","setProductName","productUrl","setProductUrl","productDesc","setProductDesc","productQty","setProductQty","productColor","setProductColor","productNameValid","setProductNameValid","productUrlValid","setproductUrlValid","productDescValid","setproductDescValid","productQtyValid","setproductQtyValid","productColorValid","setproductColorValid","handlerChange","e","target","value","addProductToBase","newFruits","imageUrl","description","color","comments","collection","add","then","cardLit","console","log","catch","error","size","aria-labelledby","centered","Form","Group","Label","Control","onChange","type","placeholder","isInvalid","Text","as","rows","Row","Col","validator","isAlpha","isURL","isInt","min","allow_leading_zeroes","length","ProductListPage","modalShow","setModalShow","sortList","setSortList","cardList","useEffect","itemArray","get","querySnapshot","forEach","el","item","data","push","fruitList","sort","a","b","sortBy","dataset","classList","contains","doc","delete","filter","err","map","ProductChangeModal","setFruit","fruit","productImg","setProductImg","productImgValid","setproductImgValid","changeProduct","myFruit","set","Comment","commentDate","children","day","undefined","month","year","hours","minutes","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","currentDate","slice","ProductComments","commentList","setCommentList","textareaComment","setTextareaComment","commentArray","where","controlId","newComment","getTime","productId","ProductPage","useLocation","pathname","replace","exists","MainPage","exact","path","App","fruits","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5691ffd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './cardElement.scss';\r\n\r\n//One product card component\r\n\r\nconst CardElement = ({id, name, img, desc, count}) => {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return(\r\n    <div className='cardElement'>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header>\r\n          <Modal.Title>Delete product</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>You really wont to delete this product?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='info' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant='danger' className='buttonDeleteElement' data-id={id} onClick={handleClose}>\r\n            Delete product\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className='cardHeader'>\r\n        <h2>{name}</h2>\r\n        <Link to={`/product/${id}`}>More information</Link>\r\n        <Button variant='outline-danger' className='cardButton' onClick={handleShow}>delete</Button>\r\n      </div>\r\n      <div className='cardBody'>\r\n        <div>\r\n          <img className='cardImg' src={img} alt='IMG'></img>\r\n        </div>\r\n        <div className='cardDesc'>\r\n          <p className='cardDescCount'>Count: {count}</p>\r\n          <p className='cardDescText'>{desc}</p>\r\n       </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardElement;","const firebaseObject = {\r\n  apiKey: \"AIzaSyDQW5jhcT06sBwihy4wA2LKqipwO11o99o\",\r\n  authDomain: \"yakymiv-product-list.firebaseapp.com\",\r\n  projectId: \"yakymiv-product-list\",\r\n  storageBucket: \"yakymiv-product-list.appspot.com\",\r\n  messagingSenderId: \"631754169498\",\r\n  appId: \"1:631754169498:web:76f0d58bd96bb02a2d5323\"\r\n}\r\n\r\nexport default firebaseObject;","import firebase from 'firebase';\r\n\r\n//import firebase initialize data.\r\n//You have to have your data\r\nimport firebaseObject from './config/firebase-conf'\r\n\r\nfirebase.initializeApp(firebaseObject);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default db;","import React, { useState } from 'react';\r\nimport { Modal, Button, Form, Col } from 'react-bootstrap';\r\nimport validator from 'validator';\r\nimport db from '../../firebase'\r\n\r\n//Component that create new product.\r\n\r\nconst NewProductModal = ({ setCardList, show, onHide }) => {\r\n\r\n  //Create state for a new product\r\n  const [productName, setProductName] = useState('');\r\n  const [productUrl, setProductUrl] = useState('');\r\n  const [productDesc, setProductDesc] = useState('');\r\n  const [productQty, setProductQty] = useState('');\r\n  const [productColor, setProductColor] = useState('');\r\n  \r\n  //Create state for input validation.\r\n  const [productNameValid, setProductNameValid] = useState(true);\r\n  const [productUrlValid, setproductUrlValid] = useState(true);\r\n  const [productDescValid, setproductDescValid] = useState(true);\r\n  const [productQtyValid, setproductQtyValid] = useState(true);\r\n  const [productColorValid, setproductColorValid] = useState(true);\r\n\r\n  //Add input to the state\r\n  const handlerChange = (e) => {\r\n    switch(e.target.id){\r\n      case 'name': \r\n        setProductName(e.target.value);\r\n        break;\r\n      case 'url':\r\n        setProductUrl(e.target.value);\r\n        break;\r\n      case 'desc':\r\n        setProductDesc(e.target.value);\r\n        break;\r\n      case 'qty':\r\n        setProductQty(e.target.value);\r\n        break;\r\n      case 'color':\r\n        setProductColor(e.target.value);\r\n        break;\r\n      default: \r\n        break;\r\n    }\r\n  } \r\n\r\n  //A function that creates a new product in the firebase and checks the input.\r\n  const handleClick = (e) => {\r\n    setProductNameValid(validator.isAlpha(productName));\r\n    setproductUrlValid(validator.isURL(productUrl));\r\n    setproductDescValid(productDesc <= 0? false : true);\r\n    setproductQtyValid(validator.isInt(productQty, {min: 0, allow_leading_zeroes: false}))\r\n    setproductColorValid(validator.isAlpha(productColor))\r\n    if (productNameValid && productUrlValid && productDescValid && productQtyValid && productColorValid && productName.length) {\r\n      addProductToBase();\r\n      onHide(); // close Modal\r\n      setProductName('');\r\n      setProductUrl('');\r\n      setProductDesc('');\r\n      setProductQty('');\r\n      setProductColor('');\r\n    }\r\n  }\r\n\r\n  // Add new product to firebase.\r\n  const addProductToBase = () => {\r\n    const newFruits = {\r\n      imageUrl: productUrl,\r\n      name: productName,\r\n      count: productQty,\r\n      description: productDesc,\r\n      color: productColor,\r\n      comments: ['another comment']\r\n    }\r\n      db.collection('fruits').add(newFruits).then((e) => {\r\n        newFruits.id = e.id;\r\n        setCardList(cardLit => [...cardLit, newFruits])\r\n        console.log('Document written with ID: ', e.id);\r\n      }).catch((error) => {\r\n        console.log('Error adding document: ', error);\r\n      })\r\n  }\r\n\r\n  //Modal\r\n  return (\r\n    <Modal show={show} onHide={onHide} size='lg' aria-labelledby='container-modal-title-vcenter' centered>\r\n      <Modal.Header>\r\n        <Modal.Title id='contained-modal-title-vcenter'>\r\n          Add new product\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label>Product name</Form.Label>\r\n            {\r\n              productNameValid ? (<Form.Control onChange={handlerChange} type='text' id='name' placeholder='Enter product name' />) :\r\n              <Form.Control onChange={handlerChange} type='text' isInvalid='true' id='name' placeholder='Enter product name' />\r\n            }\r\n            <Form.Text className='text-muted'>\r\n              Please enter a name product.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Product image</Form.Label>\r\n            {\r\n              productUrlValid ? (<Form.Control onChange={handlerChange} type='url' id='url' placeholder='Enter url to image' />) :\r\n              <Form.Control onChange={handlerChange} type='url' isInvalid='true' id='url' placeholder='Enter url to image' />\r\n            }\r\n            <Form.Text className='text-muted'>\r\n              Please enter image url.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Product description</Form.Label>\r\n            {\r\n              productDescValid ? (<Form.Control onChange={handlerChange} as='textarea' id='desc' placeholder='Enter product description' rows={3} />) :\r\n              <Form.Control onChange={handlerChange} as='textarea' isInvalid='true' id='desc' placeholder='Enter product description' rows={3} />\r\n            }\r\n            <Form.Text className='text-muted'>\r\n              Please enter a product description.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label>Q-ty of product</Form.Label>\r\n                {\r\n                  productQtyValid ? (<Form.Control onChange={handlerChange} type='number' id='qty' placeholder='Enter q-ty of product' />) :\r\n                  <Form.Control onChange={handlerChange} type='number' isInvalid='true' id='qty' placeholder='Enter q-ty of product' />\r\n                }\r\n                <Form.Text className='text-muted'>\r\n                  Please enter how much product you have.\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label>Product color</Form.Label>\r\n                {\r\n                  productColorValid ? (<Form.Control onChange={handlerChange} type='text' id='color' placeholder='Enter product color' />) :\r\n                  <Form.Control onChange={handlerChange} type='text' isInvalid='true' id='color' placeholder='Enter product color' />\r\n                }\r\n                <Form.Text className='text-muted'>\r\n                  Please enter a product color\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={onHide} variant='secondary'>\r\n          Close\r\n        </Button>\r\n        <Button onClick={handleClick} variant='success'>\r\n          Add product\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NewProductModal","import React, { useEffect, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport CardElement from './cardElement';\r\nimport NewProductModal from './newProductModal';\r\nimport './productListPage.scss';\r\n\r\nimport db from '../../firebase';\r\n\r\n//Component that get products from firebase.\r\n\r\nconst ProductListPage = () => {\r\n\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [sortList, setSortList] = useState(false);\r\n  const [cardList, setCardList] = useState([]);\r\n\r\n  //Get products from firebase\r\n  useEffect(() => {\r\n    const itemArray = [];\r\n    db.collection('fruits').get().then(querySnapshot => {\r\n      querySnapshot.forEach(el => {\r\n        const item = el.data();\r\n        item.id = el.id;\r\n        itemArray.push(item);\r\n      })\r\n      setCardList(itemArray); //Add array with products to firebase.\r\n    })\r\n  }, [])\r\n\r\n  //Function for delete product from firebase.\r\n  const handleClickDeleteElement = (e) => {\r\n    const id = e.target.dataset.id;\r\n    if (e.target.classList.contains('buttonDeleteElement')) {\r\n      db.collection('fruits').doc(id).delete().then(() => {\r\n        setCardList(cardList => cardList.filter(e => e.id !== id));\r\n        console.log('Document successfull deleted')\r\n      }).catch((err) => {\r\n        console.log('Error removing document ', err);\r\n      })\r\n    }\r\n  }\r\n\r\n  //Create sort for products\r\n  const fruitList = cardList;\r\n  const createCardList = () => {\r\n    if (sortList === 'Name'){\r\n      fruitList.sort((a, b) => a.name > b.name ? 1 : -1);\r\n    } else if (sortList === 'Count') {\r\n      fruitList.sort((a, b) => a.count - b.count);\r\n    }\r\n  }\r\n  createCardList();\r\n  const sortBy = (sort) => {\r\n    setSortList(sort);\r\n  };\r\n\r\n  return(\r\n    <div className='ProductListPage'>\r\n      <NewProductModal setCardList={setCardList} cardLit={cardList} show={modalShow} onHide={() => setModalShow(false)}></NewProductModal>\r\n      <div className='ProductListPageButtons'>\r\n        <div className='ProductListPageButtonNew'>\r\n          <Button variant='info' onClick={() => setModalShow(true)}>New Product</Button>\r\n        </div>\r\n        <div className='ProductListPageButtonSort'>\r\n          <Button variant='outline-info' onClick={() => sortBy('Name')}>Short by name</Button>\r\n          <Button variant='outline-info' onClick={() => sortBy('Count')}>Short by Count</Button>\r\n        </div>\r\n      </div>\r\n      <div onClick={handleClickDeleteElement}>\r\n        {\r\n          fruitList.map(el => <CardElement key={el.id} id={el.id} name={el.name} img={el.imageUrl} count={el.count} desc={el.description}></CardElement>)\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductListPage;","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Form, Col, Button } from 'react-bootstrap';\r\nimport validator from 'validator';\r\n\r\nimport db from '../../firebase';\r\n\r\n//Component that change data in product.\r\n\r\nconst ProductChangeModal = ({setFruit, fruit, id, show, onHide }) => {\r\n\r\n  //Create state for a new product\r\n  const [productName, setProductName] = useState('');\r\n  const [productImg, setProductImg] = useState('');\r\n  const [productQty, setProductQty] = useState('');\r\n  const [productDesc, setProductDesc] = useState('');\r\n  const [productColor, setProductColor] = useState('');\r\n\r\n  //Create state for input validation.\r\n  const [productNameValid, setProductNameValid] = useState(true);\r\n  const [productImgValid, setproductImgValid] = useState(true);\r\n  const [productDescValid, setproductDescValid] = useState(true);\r\n  const [productQtyValid, setproductQtyValid] = useState(true);\r\n  const [productColorValid, setproductColorValid] = useState(true);\r\n\r\n  //Add old data to inputs\r\n  useEffect(() => {\r\n    setProductName(fruit.name);\r\n    setProductImg(fruit.imageUrl);\r\n    setProductQty(fruit.count);\r\n    setProductDesc(fruit.description);\r\n    setProductColor(fruit.color);\r\n  }, [setProductName, setProductImg, setProductQty, setProductDesc, setProductColor, fruit])\r\n\r\n  //Change data in state\r\n  const handlerChange = (e) => {\r\n    switch(e.target.id){\r\n      case 'name': \r\n        setProductName(e.target.value);\r\n        break;\r\n      case 'url':\r\n        setProductImg(e.target.value);\r\n        break;\r\n      case 'desc':\r\n        setProductDesc(e.target.value);\r\n        break;\r\n      case 'qty':\r\n        setProductQty(e.target.value);\r\n        break;\r\n      case 'color':\r\n        setProductColor(e.target.value);\r\n        break;\r\n      default: \r\n        break;\r\n    }\r\n  } \r\n\r\n  //A function that change product in the firebase and checks the input.\r\n  const handleClick = (e) => {\r\n    setProductNameValid(validator.isAlpha(productName));\r\n    setproductImgValid(validator.isURL(productImg));\r\n    setproductDescValid(productDesc <= 0? false : true);\r\n    setproductQtyValid(validator.isInt(productQty, {min: 0, allow_leading_zeroes: false}))\r\n    setproductColorValid(validator.isAlpha(productColor))\r\n    if (productNameValid && productImgValid && productDescValid && productQtyValid && productColorValid && productName.length) {\r\n      changeProduct();\r\n      onHide(); //close Modal\r\n    }\r\n  }\r\n\r\n  // Change product in firebase.\r\n  const changeProduct = () => {\r\n    const myFruit = {\r\n      imageUrl: productImg,\r\n      name: productName,\r\n      count: productQty,\r\n      description: productDesc,\r\n      color: productColor,\r\n      comments: ['another comment']\r\n    }\r\n\r\n    db.collection('fruits').doc(id).set(myFruit).then(() => {\r\n      setFruit(myFruit);\r\n      console.log('The document has been modified');\r\n    }).catch((error) => {\r\n      console.log('Error adding document: ', error);\r\n    })\r\n  }\r\n\r\n  //Modal\r\n  return(\r\n    <Modal show={show} onHide={onHide} size='lg' aria-labelledby='contained-modal-title-vcenter' centered>\r\n      <Modal.Header>\r\n        <Modal.Title id='contained-modal-title-vcenter'>\r\n          Change product\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n      <Form>\r\n          <Form.Group>\r\n            <Form.Label>Product name</Form.Label>\r\n            <Form.Control type='text' id='name' value={productName} onChange={handlerChange}/>\r\n            <Form.Text className='text-muted'>\r\n              Please enter a name product.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Product image</Form.Label>\r\n            <Form.Control type='url' id='url' value={productImg} onChange={handlerChange}/>\r\n            <Form.Text className='text-muted'>\r\n              Please enter image url.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Product description</Form.Label>\r\n            <Form.Control as='textarea' id='desc' value={productDesc} rows={3} onChange={handlerChange}/>\r\n            <Form.Text className='text-muted'>\r\n              Please enter a product description.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label>Q-ty of product</Form.Label>\r\n                <Form.Control type='number' id='qty' value={productQty} onChange={handlerChange}/>\r\n                <Form.Text className='text-muted'>\r\n                  Please enter how much product you have.\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label>Product color</Form.Label>\r\n                <Form.Control type='text' id='color' value={productColor} onChange={handlerChange}/>\r\n                <Form.Text className='text-muted'>\r\n                  Please enter a product color\r\n                </Form.Text>\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={onHide} variant='success'>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleClick} variant='secondary'>\r\n          Change\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ProductChangeModal;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport './comment.scss';\r\n\r\n// Component for one commet\r\n\r\nconst Comment = ({commentDate, id, children }) => {\r\n\r\n  //create variables for the date.\r\n  let day = undefined\r\n  let month = undefined\r\n  let year = undefined\r\n  let hours = undefined\r\n  let minutes = undefined\r\n\r\n  //Create function for initialize variables for date.\r\n  const getDate = () => {\r\n    const date = new Date(commentDate);\r\n\r\n    day = date.getDate();\r\n    month = date.getMonth();\r\n    year = date.getFullYear();\r\n    hours = date.getHours();\r\n    minutes = date.getMinutes();\r\n\r\n    const currentDate = (e) => {\r\n      return ('0' + e).slice(-2);\r\n    }\r\n\r\n    day = currentDate(day);\r\n    month = currentDate(month + 1)\r\n    hours = currentDate(hours);\r\n    minutes = currentDate(minutes);\r\n  }\r\n\r\n  getDate();\r\n\r\n  return (\r\n    <div className='commentItem'>\r\n      <p className='commentDate'>{`${hours}:${minutes} - ${day}.${month}.${year}`}</p>\r\n      <p className='commentText'>{children}</p>\r\n      <Button data-id={id} variant='danger'>Delete</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comment;","import React, { useEffect, useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nimport Comment from './comment';\r\nimport './productComments.scss';\r\n\r\nimport db from '../../firebase';\r\n\r\n//Component that get comments from firebase.\r\n\r\nconst ProductComments = ({ id }) => {\r\n  \r\n  const [commentList, setCommentList] = useState([]);\r\n  const [textareaComment, setTextareaComment] = useState('');\r\n\r\n  //Get comments from firebase. For it we use prodict ID.\r\n  useEffect(() => {\r\n    const commentArray = []\r\n    db.collection('comments').where('productId', '==', id ).get().then(querySnapshot => {\r\n      querySnapshot.forEach(el => {\r\n        const item = el.data(); \r\n        item.id = el.id;\r\n        commentArray.push(item);\r\n      })\r\n      setCommentList(commentArray); //Add array with comments to state\r\n    })\r\n  }, [id]);\r\n\r\n  //Follow the text area\r\n  const handleChange = (e) => {\r\n    setTextareaComment(e.target.value);\r\n  }\r\n\r\n  // Function that checks the input and adds a new comment to the firebase\r\n  const handleClickAdd = () => {\r\n\r\n    if (textareaComment.length <= 0) {\r\n      return \r\n    }\r\n\r\n    const currentDate = new Date().getTime();\r\n    const newComment = {\r\n      date: currentDate,\r\n      description: textareaComment,\r\n      productId: id,\r\n    }\r\n    db.collection('comments').add(newComment).then(e => {\r\n      newComment.id = e.id;\r\n      setCommentList([...commentList, newComment])\r\n    })\r\n  }\r\n\r\n  //Function that delete comment from firebase.\r\n  const handleClickDelete = (e) => {\r\n    if (e.target.dataset.id) {\r\n      db.collection('comments').doc(e.target.dataset.id).delete().then(() => {\r\n        setCommentList(commentList => commentList.filter(el => el.id !== e.target.dataset.id));\r\n        console.log('Document successfull deleted')\r\n      }).catch((err) => {\r\n        console.log('Error removing document ', err);\r\n      })\r\n    }\r\n  }\r\n\r\n  //Sort comments on date.\r\n  commentList.sort((a, b) => a.date < b.date ? 1 : -1);\r\n\r\n  return (\r\n    <div className='productComments'>\r\n      <div>\r\n      <Form>\r\n        <Form.Group controlId='exampleForm.ControlTextarea1'>\r\n          <Form.Label>Add new comment</Form.Label>\r\n          <Form.Control onChange={handleChange} value={textareaComment} as='textarea' rows={3} />\r\n        </Form.Group>\r\n        <Button onClick={handleClickAdd}>Add comment</Button>\r\n      </Form>\r\n      </div>\r\n      <div onClick={handleClickDelete} className='productCommentList'>\r\n        <div>\r\n          <h3 className='ProductCommentListTitle'>Comments</h3>\r\n        </div>\r\n        {commentList.map(el => <Comment key={el.id} id={el.id} commentDate={el.date}>{el.description}</Comment>)}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ProductComments;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\n\r\nimport ProductChangeModal from './productChangeModal';\r\nimport ProductComments from './productComments';\r\nimport './productPage.scss';\r\n\r\nimport db from '../../firebase';\r\n\r\n//Component that get one product from firebase\r\n\r\nconst ProductPage = () => {\r\n\r\n  const [fruit, setFruit] = useState('');\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  //Get id from URL.\r\n  const location = useLocation();\r\n  const id = location.pathname.replace('/product/', '');\r\n\r\n  //Get one product from firebase. Use product id for it.\r\n  useEffect(() => {\r\n    var docRef = db.collection('fruits').doc(id);\r\n    docRef.get().then((doc) => {\r\n      if (doc.exists) {\r\n        setFruit(doc.data());\r\n      } else {\r\n        console.log('No such document!');\r\n      }\r\n    }).catch((error) => {\r\n      console.log('Error getting document: ', error);\r\n    })\r\n  }, [id])\r\n\r\n  return(\r\n    <div className='productPage'>\r\n      <ProductChangeModal setFruit={setFruit} fruit={fruit} id={id} show={modalShow} onHide={() => setModalShow(false)}/>\r\n      <div className='productPageTopLine'>\r\n        <Row>\r\n          <Col>\r\n            <h1 className='productPageEditTitle'>{fruit.name}</h1>\r\n          </Col>\r\n          <Col className='productPageEditButton'>\r\n            <Button variant='primary' onClick={() => setModalShow(true)}>Edit</Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div className='productPageImageWrapper'>\r\n        <img className='productPageImage' src={fruit.imageUrl} alt={fruit.name} />\r\n      </div>\r\n      <div className='productPageDescWrapper'>\r\n      <p>{fruit.description}</p>\r\n      </div>\r\n      <div className='productPageInfoWrapper'>\r\n        <p className='productPageInfoItem'>Qty: {fruit.count}</p>\r\n        <p className='productPageInfoItem'>Color: {fruit.color}</p>\r\n      </div>\r\n      <ProductComments id={id} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductPage;","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport ProductListPage from './productListPage';\r\nimport ProductPage from './productPage';\r\n\r\n//Check router\r\n//Main page\r\n\r\nconst MainPage = () => {\r\n\r\n  return(\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <ProductListPage/>\r\n        </Route>\r\n        <Route exact path='/product/:id'>\r\n          <ProductPage/>\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default MainPage;","import MainPage from \"./components/main/mainPage\";\nimport '../node_modules/react-bootstrap/dist/react-bootstrap.min.js'\n\nfunction App({ fruits }) {\n  console.log(fruits);\n  return (\n    <MainPage></MainPage>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}